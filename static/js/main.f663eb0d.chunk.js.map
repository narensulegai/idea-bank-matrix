{"version":3,"sources":["components/EditableText/index.js","components/EditableIdeaText/index.js","components/Ideas/index.js","components/Styled/index.js","components/FunctionName/index.js","components/Quadrant/index.js","components/CostImpactGrid/index.js","App.js","serviceWorker.js","index.js"],"names":["EditableText","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","editMode","handleSave","asyncToGenerator","regenerator_default","a","mark","_callee","inp","wrap","_context","prev","next","input","value","toggleEdit","onChange","stop","handleDelete","onDelete","focusInput","_callee2","_context2","focus","_callee3","_context3","setState","abrupt","sent","_this2","react_default","createElement","react","className","TextField","fullWidth","inputRef","placeholder","label","defaultValue","margin","onBlur","Done_default","color","onClick","Typography","variant","Delete_default","Component","defaultProps","draggable","EditableIdeaText","quadrantText","handleDragStart","ev","data","idea","dataTransfer","setData","JSON","stringify","onDragStart","DragIndicator_default","quadrant","Ideas","handleIdeaChange","index","ideas","slice","text","handleAddNewIdea","id","Date","now","parseInt","Math","random","push","newIdea","handleDeleteIdea","i","_","splice","handleOnIdeaDrag","map","key","components_EditableIdeaText","onDrag","e","multiline","Add_default","PaddedPaper","styled","Paper","padding","marginTop","FunctionName","handleFunctionNameChange","name","functionHierarchy","handleAddNewFunction","functionName","newFunction","children","handleFunctionNameDelete","handleChildFunctionHierarchyChange","newFunctionHierarchy","handleIdeasChange","style","paddingLeft","paddingBottom","Fab","size","_ref","components_EditableText","gutterBottom","components_Ideas","newIdeas","f","Quadrant","handleOnDrop","preventDefault","parse","getData","onIdeaDrop","handleOnDragOver","onDrop","onDragOver","labels","CostImpactGrid","gridType","setGridType","handleIdeaDrop","align","Tabs","indicatorColor","textColor","centered","Tab","type","components_Quadrant","bind","ideasByQuadrants","App","ideaQuadrant","handleFunctionHierarchyChange","refreshIdeaQuadrant","_x","apply","arguments","extractAllIdeas","fh","reduce","fhm","concat","toConsumableArray","allIdeas","updateIdeaQuadrant","handleIdeaQuadrantChange","_ref3","updateQuadrantInFunctionHierarchy","_x2","_x3","_ref4","_callee4","_context4","m","_x4","_ref5","_callee5","updateInIdeaList","updateRecursively","_context5","forEach","cloneDeep","_x5","_x6","AppBar","position","Toolbar","Container","Grid","container","spacing","item","md","components_FunctionName","length","components_CostImpactGrid","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f663eb0d.chunk.js","sourcesContent":["import React, {Component, Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport DoneIcon from '@material-ui/icons/Done';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Typography from '@material-ui/core/Typography';\n\nclass EditableText extends Component {\n\n  state = {editMode: false};\n\n  constructor(props) {\n    super(props);\n\n  }\n\n  componentDidMount() {\n  }\n\n  handleSave = async () => {\n    const inp = this.input.value;\n    await this.toggleEdit();\n    this.props.onChange(inp);\n  };\n\n  handleDelete = () => {\n    this.props.onDelete();\n  };\n\n  focusInput = async () => {\n    await this.toggleEdit();\n    this.input.focus();\n  };\n\n  toggleEdit = async () => {\n    return await this.setState({editMode: !this.state.editMode});\n  };\n\n  render() {\n    return (\n      <Fragment>\n        {this.state.editMode\n\n          ? <div className=\"row\">\n            <TextField\n              fullWidth={true}\n              inputRef={(input) => {\n                this.input = input;\n              }}\n              placeholder={this.props.label}\n              defaultValue={this.props.value}\n              margin=\"none\"\n              onBlur={this.handleSave}\n            />\n\n            <DoneIcon color=\"primary\" onClick={this.handleSave}/>\n          </div>\n\n          : <div className=\"row\">\n            <div onClick={this.focusInput} className=\"editable-text\">\n              <div className=\"row\">\n                <Typography variant=\"h5\">\n                  &nbsp;&nbsp;{this.props.value}\n                </Typography>\n              </div>\n            </div>\n            <DeleteIcon color=\"secondary\" onClick={this.handleDelete}/>\n          </div>}\n      </Fragment>\n    );\n  }\n}\n\nEditableText.propTypes = {\n  onChange: PropTypes.func,\n  value: PropTypes.string,\n  label: PropTypes.string\n};\n\nEditableText.defaultProps = {\n  draggable: false\n};\n\nexport default EditableText;\n","import React, {Component, Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport DoneIcon from '@material-ui/icons/Done';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport DragIndicatorIcon from '@material-ui/icons/DragIndicator';\nimport Typography from '@material-ui/core/Typography';\n\nclass EditableIdeaText extends Component {\n\n  state = {editMode: false};\n  quadrantText = ['Q12', 'Q22', 'Q11', 'Q21'];\n\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n  }\n\n  handleSave = async () => {\n    const inp = this.input.value;\n    await this.toggleEdit();\n    this.props.onChange(inp);\n  };\n\n  handleDelete = () => {\n    this.props.onDelete();\n  };\n\n  handleDragStart = (ev) => {\n    const data = this.props.idea;\n    ev.dataTransfer.setData(\"data\", JSON.stringify(data));\n  };\n\n  focusInput = async () => {\n    await this.toggleEdit();\n    this.input.focus();\n  };\n\n  toggleEdit = async () => {\n    return await this.setState({editMode: !this.state.editMode});\n  };\n\n  render() {\n    return (\n      <Fragment>\n        {this.state.editMode\n\n          ? <div className=\"row\">\n            <TextField\n              fullWidth={true}\n              inputRef={(input) => {\n                this.input = input;\n              }}\n              placeholder={this.props.label}\n              defaultValue={this.props.value}\n              margin=\"none\"\n              onBlur={this.handleSave}\n            />\n            <DoneIcon color=\"primary\" onClick={this.handleSave}/>\n          </div>\n\n          : <div className=\"row\">\n            <div draggable={true} onClick={this.focusInput} className=\"editable-text\"\n                 onDragStart={this.handleDragStart}>\n              <div className=\"row\">\n                <DragIndicatorIcon color=\"primary\"/>\n                <Typography variant=\"subtitle1\">\n                  {this.props.value}\n                </Typography>\n              </div>\n            </div>\n            <div className=\"row\">\n              {this.props.idea.quadrant === null\n                ? null\n                : <div className='quadrant-indicator'>\n                  {this.quadrantText[this.props.idea.quadrant]}\n                </div>}\n              <DeleteIcon color=\"secondary\" onClick={this.handleDelete}/>\n            </div>\n          </div>}\n      </Fragment>\n    );\n  }\n}\n\nEditableIdeaText.propTypes = {\n  onChange: PropTypes.func,\n  value: PropTypes.string,\n  idea: PropTypes.any,\n  label: PropTypes.string\n};\n\nEditableIdeaText.defaultProps = {};\n\nexport default EditableIdeaText;\n","import React, {Component, Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport * as _ from 'lodash';\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from '@material-ui/icons/Add';\nimport EditableIdeaText from \"../EditableIdeaText\";\n\nclass Ideas extends Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n  }\n\n  handleIdeaChange = (index, value) => {\n    const ideas = this.props.ideas.slice(0);\n    ideas[index].text = value;\n    this.props.onChange(ideas);\n  };\n\n  handleAddNewIdea = () => {\n    const id = Date.now() + parseInt(Math.random());\n    const ideas = this.props.ideas.slice(0);\n    ideas.push({id, text: this.newIdea.value, quadrant: null});\n    this.newIdea.value = '';\n    this.props.onChange(ideas);\n  };\n\n  handleDeleteIdea = (i) => {\n    const ideas = _.cloneDeep(this.props.ideas);\n    ideas.splice(i, 1);\n    this.props.onChange(ideas);\n  };\n\n  handleOnIdeaDrag = (i) => {\n    return this.props.ideas[i];\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <Fragment>\n          {this.props.ideas.map((idea, i) => {\n            return <div key={i}>\n              <EditableIdeaText label=\"Idea text\"\n                                idea={idea}\n                                onDrag={() => {\n                                  this.handleOnIdeaDrag(i)\n                                }}\n                                onChange={(e) => {\n                                  this.handleIdeaChange(i, e)\n                                }}\n                                onDelete={() => {\n                                  this.handleDeleteIdea(i)\n                                }}\n                                value={idea.text}/>\n            </div>\n          })}\n        </Fragment>\n\n        <div className=\"row\">\n          <TextField\n            fullWidth={true}\n            placeholder=\"Idea for function\"\n            inputRef={(input) => {\n              this.newIdea = input;\n            }}\n            multiline\n            label=\"Idea text\"\n            margin=\"none\"/>\n          <AddIcon onClick={this.handleAddNewIdea} color=\"primary\"/>\n        </div>\n      </Fragment>\n\n    );\n  }\n}\n\nIdeas.propTypes = {\n  ideas: PropTypes.array,\n  onChange: PropTypes.func\n};\n\nexport default Ideas;","import Fab from \"@material-ui/core/Fab/index\";\nimport Paper from '@material-ui/core/Paper';\nimport {styled} from '@material-ui/styles';\n\nexport const PaddedPaper = styled(Paper)({\n  padding: '15px',\n  marginTop: '10px'\n});\n\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport EditableText from \"../EditableText\";\nimport Ideas from \"../Ideas\";\nimport TextField from '@material-ui/core/TextField';\nimport AddIcon from '@material-ui/icons/Add';\nimport {PaddedPaper} from '../Styled';\nimport Paper from '@material-ui/core/Paper';\nimport Fab from \"@material-ui/core/Fab\";\nimport Typography from '@material-ui/core/Typography';\n\nclass FunctionName extends Component {\n\n  state = {\n    ideas: []\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n  }\n\n  handleFunctionNameChange = (i, name) => {\n    const functionHierarchy = this.props.functionHierarchy.slice(0);\n    functionHierarchy[i].name = name;\n    this.props.onChange(functionHierarchy);\n  };\n\n  handleAddNewFunction = () => {\n    const functionName = this.newFunction.value;\n    const functionHierarchy = this.props.functionHierarchy.slice(0);\n    functionHierarchy.push({name: functionName, children: [], ideas: []});\n    this.props.onChange(functionHierarchy);\n    this.newFunction.value = \"\";\n  };\n\n  handleFunctionNameDelete = (index) => {\n    const functionHierarchy = this.props.functionHierarchy.slice(0);\n    functionHierarchy.splice(index, 1);\n    this.props.onChange(functionHierarchy);\n  };\n\n  handleChildFunctionHierarchyChange = (newFunctionHierarchy, i) => {\n    const functionHierarchy = this.props.functionHierarchy.slice(0);\n    functionHierarchy[i].children = newFunctionHierarchy;\n    this.props.onChange(functionHierarchy);\n  };\n\n  handleIdeasChange = (i, ideas) => {\n    const functionHierarchy = this.props.functionHierarchy.slice(0);\n    functionHierarchy[i].ideas = ideas;\n    this.props.onChange(functionHierarchy);\n  };\n\n  render() {\n    return (\n      <div style={{paddingLeft: 20, paddingBottom: 20}}>\n\n        <div className=\"row small-margin-top\">\n\n          <TextField\n            fullWidth={true}\n            placeholder=\"HR, Finance, IT ...\"\n            inputRef={(input) => {\n              this.newFunction = input;\n            }}\n            label=\"Add a function\"\n            defaultValue={this.props.value}\n            margin=\"none\"\n            onBlur={this.handleSave}/>\n\n          <Fab size=\"small\" color=\"primary\" onClick={this.handleAddNewFunction}>\n            <AddIcon/>\n          </Fab>\n\n        </div>\n\n        <div>\n          {this.props.functionHierarchy.map(({name, ideas}, i) => {\n            return <PaddedPaper key={i}>\n              <div>\n                <EditableText value={name}\n                              onChange={(name) => {\n                                this.handleFunctionNameChange(i, name)\n                              }}\n                              onDelete={() => {\n                                this.handleFunctionNameDelete(i)\n                              }}\n                              label=\"Function name\"\n                />\n              </div>\n              <PaddedPaper>\n                <Typography variant=\"subtitle2\" gutterBottom={false}>\n                  Add ideas for {name}\n                </Typography>\n                <Ideas ideas={ideas} onChange={(newIdeas) => {\n                  this.handleIdeasChange(i, newIdeas)\n                }}/>\n              </PaddedPaper>\n              {<div>\n                <FunctionName\n                  functionHierarchy={this.props.functionHierarchy[i].children}\n                  onChange={(f) => {\n                    this.handleChildFunctionHierarchyChange(f, i)\n                  }}/>\n              </div>}\n            </PaddedPaper>\n          })}\n        </div>\n\n      </div>\n    );\n  }\n}\n\nFunctionName.propTypes = {};\n\nexport default FunctionName;","import React, {Component, Fragment} from 'react';\nimport PropTypes from 'prop-types';\n\nclass Quadrant extends Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n  }\n\n  handleOnDrop = (ev) => {\n    ev.preventDefault();\n    const data = JSON.parse(ev.dataTransfer.getData(\"data\"));\n    this.props.onIdeaDrop(data);\n  };\n\n  handleOnDragOver = (ev) => {\n    ev.preventDefault();\n  };\n\n  handleDragStart = (ev, data) => {\n    ev.dataTransfer.setData(\"data\", JSON.stringify(data));\n  };\n\n  render() {\n    return (\n      <div className=\"quadrant\" onDrop={this.handleOnDrop} onDragOver={this.handleOnDragOver}>\n        {this.props.ideas.map((idea, i) => {\n          return <div className=\"quadrant-idea\" key={i} draggable={true} onDragStart={(ev) => {\n            this.handleDragStart(ev, idea)\n          }}>{idea.text}</div>\n        })}\n        {this.props.labels}\n      </div>\n    );\n  }\n}\n\nQuadrant.propTypes = {\n  onIdeaDrop: PropTypes.func,\n  ideas: PropTypes.array\n};\n\nexport default Quadrant;","import React, {Component, Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport Quadrant from \"../Quadrant\";\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\n\nclass CostImpactGrid extends Component {\n\n  state = {\n    gridType: 0,\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n  }\n\n  setGridType = (ev, gridType) => {\n    this.setState({gridType})\n  };\n\n  handleIdeaDrop = (quadrant, idea) => {\n    this.props.onChange(quadrant, idea);\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <Typography align=\"center\" variant=\"h5\">Assessment Grid</Typography>\n        <Tabs value={this.state.gridType} onChange={this.setGridType}\n              indicatorColor=\"primary\"\n              textColor=\"primary\"\n              centered>\n          <Tab label=\"2 X 2\"/>\n          <Tab label=\"3 X 3\"/>\n        </Tabs>\n        <div className=\"grid\">\n\n          {/*Sub labels*/}\n          <div className=\"q0-label\">\n            <input className=\"quadrant-label-input\" type=\"text\" defaultValue=\"High\"/>\n          </div>\n          <div className=\"q2-label-left\">\n            <input className=\"quadrant-label-input\" type=\"text\" defaultValue=\"Low\"/>\n          </div>\n          <div className=\"q2-label-bottom\">\n            <input className=\"quadrant-label-input\" type=\"text\" defaultValue=\"High\"/>\n          </div>\n          <div className=\"q3-label\">\n            <input className=\"quadrant-label-input\" type=\"text\" defaultValue=\"Low\"/>\n          </div>\n\n          {/*Main axis labels*/}\n          <div className=\"x-axis-label\">\n            <input className=\"quadrant-label-input\" type=\"text\" defaultValue=\"Impact\"/>\n          </div>\n          <div className=\"y-axis-label\">\n            <input className=\"quadrant-label-input\" type=\"text\" defaultValue=\"Cost\"/>\n          </div>\n\n          <Quadrant onIdeaDrop={this.handleIdeaDrop.bind(this, 0)} ideas={this.props.ideasByQuadrants[0]}/>\n          <Quadrant onIdeaDrop={this.handleIdeaDrop.bind(this, 1)} ideas={this.props.ideasByQuadrants[1]}/>\n          <Quadrant onIdeaDrop={this.handleIdeaDrop.bind(this, 2)} ideas={this.props.ideasByQuadrants[2]}/>\n          <Quadrant onIdeaDrop={this.handleIdeaDrop.bind(this, 3)} ideas={this.props.ideasByQuadrants[3]}/>\n        </div>\n      </Fragment>\n\n    );\n  }\n}\n\nCostImpactGrid.propTypes = {\n  ideaQuadrant: PropTypes.object,\n  onChange: PropTypes.func\n};\n\nexport default CostImpactGrid;","import React, {Component, Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport './App.scss';\nimport FunctionName from './components/FunctionName';\nimport 'typeface-roboto';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport CostImpactGrid from \"./components/CostImpactGrid\";\nimport _ from 'lodash';\n\nclass App extends Component {\n  state = {\n    functionHierarchy: [],\n    ideaQuadrant: {},\n    ideasByQuadrants: [[], [], [], [], []]\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  handleFunctionHierarchyChange = async (functionHierarchy) => {\n    await this.setState({functionHierarchy});\n    return await this.refreshIdeaQuadrant();\n  };\n\n  extractAllIdeas = (fh) => {\n    return fh.reduce((fhm, f) => {\n      return [...fhm, ...f.ideas, ...this.extractAllIdeas(f.children)];\n    }, []);\n  };\n  refreshIdeaQuadrant = async () => {\n    const allIdeas = this.extractAllIdeas(this.state.functionHierarchy);\n    return await this.updateIdeaQuadrant(allIdeas);\n  };\n  handleIdeaQuadrantChange = async (quadrant, idea) => {\n    await this.updateQuadrantInFunctionHierarchy(quadrant, idea);\n    return await this.refreshIdeaQuadrant();\n  };\n\n  updateIdeaQuadrant = async (allIdeas) => {\n    const ideasByQuadrants = allIdeas.reduce((m, idea) => {\n      if (idea.quadrant !== null) m[idea.quadrant].push(idea);\n      return m;\n    }, [[], [], [], []]);\n    return await this.setState({ideasByQuadrants});\n  };\n\n  updateQuadrantInFunctionHierarchy = async (quadrant, idea) => {\n    const updateInIdeaList = (ideas) => { //TODO : break when changed\n      ideas.forEach(i => {\n        if (i.id === idea.id) {\n          i.quadrant = quadrant;\n        }\n      });\n    };\n    const updateRecursively = (fh) => {\n      updateInIdeaList(fh.ideas);\n      fh.children.forEach(updateRecursively);\n    };\n    const functionHierarchy = _.cloneDeep(this.state.functionHierarchy);\n    functionHierarchy.forEach(updateRecursively);\n    return await this.setState({functionHierarchy});\n  };\n\n  render() {\n\n    return (\n      <Fragment>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Typography variant=\"h5\">\n              IdeaBank Workshop\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Container>\n          <div className=\"small-margin-top\"/>\n          <Grid container spacing={3}>\n            <Grid item md={6}>\n              <Typography align=\"center\" variant=\"h5\">Function Ideas</Typography>\n              <FunctionName functionHierarchy={this.state.functionHierarchy}\n                            onChange={this.handleFunctionHierarchyChange}/>\n              {this.state.functionHierarchy.length === 0\n                ? <Typography align=\"center\" variant=\"subtitle1\">Please add a function name to start.</Typography>\n                : null}\n            </Grid>\n            <Grid item md={6}>\n              <CostImpactGrid ideasByQuadrants={this.state.ideasByQuadrants}\n                              onChange={this.handleIdeaQuadrantChange}/>\n            </Grid>\n          </Grid>\n        </Container>\n      </Fragment>\n    );\n  }\n}\n\nApp.propTypes = {};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}